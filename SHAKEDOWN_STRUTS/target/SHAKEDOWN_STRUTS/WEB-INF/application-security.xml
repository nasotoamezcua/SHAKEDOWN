<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    					 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                         http://www.springframework.org/schema/security
                         http://www.springframework.org/schema/security/spring-security.xsd">


	<http auto-config="true" use-expressions="true"  >
		<form-login 
			login-page="/login/loginAction" authentication-failure-url="/login/loginErrorAction"
			login-processing-url="/j_spring_security_check"
			username-parameter="username" password-parameter="password" />

		<logout logout-url="/logout" logout-success-url="/login/loginAction" invalidate-session="true" />

		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/eventos/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/home/**" access="isAuthenticated()" />
		<intercept-url pattern="/reports/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/login/**" access="permitAll" />
		<intercept-url pattern="/**" access="isAuthenticated()" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
			
				users-by-username-query="SELECT nom_usua, pwd_usua, active 
											FROM T_USUARIOS 
											WHERE nom_usua = ?"
											
				authorities-by-username-query="SELECT u.nom_usua, r.nom_rol 
					FROM T_USUARIOS u
					INNER JOIN T_USUARIOS_ROLES ur ON u.id_usuario = ur.id_usua 
					INNER JOIN T_ROLES r ON r.id_rol = ur.id_rol 
					WHERE u.nom_usua = ?" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>